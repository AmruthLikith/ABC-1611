pipeline {
    agent any
    
    environment {
        TOMCAT_URL = 'http://172.174.36.73:8081/'  // Tomcat URL
        TOMCAT_USER = 'amruth'  // Tomcat server username
        TOMCAT_PASSWORD = 'amruth'  // Tomcat server password
        ARTIFACT_NAME = 'Amazon.war'  // Artifact name
        TOMCAT_HOME = '/home/azureuser/tomcat/apache-tomcat-9.0.104'  // Tomcat home directory
    }
    
    stages {
        // Stage 1: Clone the project
        stage('Clone Project') {
            steps {
                git branch: 'master', url: 'https://github.com/AmruthLikith/Amazon'
            }
        }

        // Stage 2: Check Project Structure
        stage('Check Project Structure') {
            steps {
                sh '''
                echo "Checking directory contents..."
                ls -al
                if [ ! -f Amazon/Amazon-Web/pom.xml ]; then
                    echo "pom.xml not found! Build cannot continue."
                    exit 1
                fi
                '''
            }
        }

        // Stage 3: Clean the project
        stage('Clean') {
            steps {
                dir('Amazon/Amazon-Web') { // Corrected path
                    sh 'mvn clean'
                }
            }
        }

        // Stage 4: Compile the project
        stage('Compile') {
            steps {
                dir('Amazon/Amazon-Web') { // Corrected path
                    sh 'mvn compile'
                }
            }
        }

        // Stage 5: Run Tests
        stage('Test') {
            steps {
                dir('Amazon/Amazon-Web') { // Corrected path
                    sh 'mvn test'
                }
            }
        }

        // Stage 6: Build the project
        stage('Build') {
            steps {
                dir('Amazon/Amazon-Web') { // Corrected path
                    sh 'mvn install'
                    sh 'echo "Listing target directory:"'
                    sh 'ls -al target || true'
                }
            }
        }

        // Stage 7: Verify Artifact
        stage('Verify Artifact') {
            steps {
                dir('Amazon/Amazon-Web') { // Corrected path
                    script {
                        echo 'Verifying if the artifact exists...'
                        sh '''
                        if [ ! -f target/${ARTIFACT_NAME} ]; then
                            echo "Artifact ${ARTIFACT_NAME} not found. Build failed."
                            exit 1
                        fi
                        '''
                    }
                }
            }
        }

        // Stage 8: Deploy to Tomcat
        stage('Deploy') {
            steps {
                dir('Amazon/Amazon-Web') { // Corrected path
                    script {
                        echo 'Deploying to Tomcat...'
                        sh """
                        sudo cp target/${ARTIFACT_NAME} ${TOMCAT_HOME}/webapps/
                        """
                        echo 'Restarting Tomcat...'
                        sh """
                        curl -u ${TOMCAT_USER}:${TOMCAT_PASSWORD} -X POST ${TOMCAT_URL}/shutdown
                        sleep 5
                        curl -u ${TOMCAT_USER}:${TOMCAT_PASSWORD} -X POST ${TOMCAT_URL}/start
                        """
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline execution complete.'
        }
    }
}
